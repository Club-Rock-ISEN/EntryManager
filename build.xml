<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="build" name="Club Rock ISEN" basedir=".">
	<description>
		Ant build file for the Club Rock ISEN application.
	</description>

	<!-- ###### PROPERTIES ###### -->
	<property environment="env" />
	<property name="srcDir" value="${basedir}/src" description="The source directory" />
	<property name="binDir" value="${basedir}/bin" description="The target directory for the class files" />
	<property name="targetDir" value="${basedir}/target/" description="The target directory for the generated executable files" />
	<property name="targetLibDirName" value="lib" description="The name of the librairies directory in the target folder" />
	<property name="confDir" value="${basedir}/conf" description="The configuration directory" />
	<property name="libDir" value="${basedir}/lib" description="The library directory" />
	<property name="docDir" value="${basedir}/doc" description="The javadoc directory" />
	<property name="mainClass" value="org.clubrockisen.App" description="The entry point of the application" />

	<path id="classpath">
		<fileset dir="${libDir}" includes="**/*.jar" />
	</path>

	<!-- ###### TARGETS ###### -->
	<!-- ================================= 
          target: init              
         ================================= -->
	<target name="init" description="Create the ${binDir} directory">
		<mkdir dir="${binDir}" />
	</target>
	
	<!-- ================================= 
          target: clean              
         ================================= -->
	<target name="clean" description="Clean the files created during the compilation (${binDir} directory)">
		<delete includeemptydirs="true" verbose="true">
			<fileset dir="${binDir}" includes="**/*" />
		</delete>
	</target>
	
	<!-- ================================= 
          target: cleanInstall              
         ================================= -->
    <target name="cleanInstall" depends="clean" description="Clean every file generated by the script (jars, doc, class).">
        <delete includeemptydirs="true" verbose="true">
			<fileset dir="${targetDir}" includes="**/*" />
        	<fileset dir="${docDir}" includes="**/*" />
		</delete>
    </target>

	<!-- ================================= 
	          target: build              
	         ================================= -->
	<target name="build" depends="init" description="Compile the source files">
		<javac srcdir="${srcDir}" destdir="${binDir}" includeantruntime="false" classpathref="classpath" />
	</target>
	
	<!-- ================================= 
	          target: jar              
	         ================================= -->
	<target name="jar" depends="build">
		<mkdir dir="${targetDir}" />
		<!-- Creating a property with all the library in the libDir -->
		<pathconvert property="projectLibs" pathsep=" ">
			<mapper>
				<chainedmapper>
					<!-- remove absolute path -->
					<flattenmapper />
					<!-- add lib/ prefix -->
					<globmapper from="*" to="${targetLibDirName}/*" />
				</chainedmapper>
			</mapper>
			<path>
				<!-- lib.home contains all jar files, in several subdirectories -->
				<fileset dir="${libDir}">
					<include name="**/*.jar" />
				</fileset>
			</path>
		</pathconvert>
		<!-- Copying the librairies in the target librairy folder -->
		<copy todir="${targetDir}/${targetLibDirName}">
			<fileset dir="${libDir}" id="id">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		<!-- Finally, creating the jar -->
		<jar destfile="${targetDir}/${ant.project.name}.jar" basedir="${binDir}">
			<manifest>
				<attribute name="Main-Class" value="${mainClass}" />
				<attribute name="Class-Path" value="${projectLibs}" />
			</manifest>
		</jar>
	</target>

	<!-- ================================= 
		          target: run              
		         ================================= -->
	<target name="run" depends="jar" description="Run the jar file">
		<java jar="${targetDir}/${ant.project.name}.jar" fork="true">
			<classpath>
				<path refid="classpath" />
				<path location="${targetDir}/${ant.project.name}.jar" />
			</classpath>
		</java>
	</target>

	<!-- ================================= 
			          target: rebuild              
			         ================================= -->
	<target name="rebuild" depends="clean, build" description="Rebuild the project (clean and compile)" />

	<!-- ================================= 
			          target: javadoc              
			         ================================= -->
	<target name="javadoc" description="Create the javadoc ">
		<mkdir dir="${docDir}" />
		<javadoc destdir="${docDir}" windowtitle="Club Rock ISEN">
			<fileset dir="${srcDir}" defaultexcludes="true">
				<include name="org/clubrockisen/**" />
			</fileset>
		</javadoc>
	</target>

	<!-- ###### SONAR ###### -->
	<!-- The task -->
	<taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
		<classpath path="${ant.home}/lib/sonar-ant-task-1.3.jar" />
	</taskdef>
	<!-- The properties -->
	<property name="sonar.jdbc.url" value="jdbc:mysql://0.0.0.0:3306/sonar?useUnicode=true&amp;characterEncoding=utf8" />
	<property name="sonar.jdbc.driverClassName" value="com.mysql.jdbc.Driver" />
	<property name="sonar.jdbc.username" value="sonar" />
	<property name="sonar.jdbc.password" value="sonar" />
	<property name="sonar.host.url" value="http://0.0.0.0:9090" />
	<!-- ================================= 
			          target: sonar              
			         ================================= -->
	<target name="sonar" description="Start the sonar analysis">
		<property name="sonar.sources" value="src" />
		<property name="sonar.binaries" value="bin" />
		<sonar:sonar key="org.clubrockisen:app" version="0.1-SNAPSHOT" xmlns:sonar="antlib:org.sonar.ant" />
	</target>

</project>